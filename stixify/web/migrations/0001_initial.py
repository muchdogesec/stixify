# Generated by Django 5.1 on 2024-10-04 13:12

import django.contrib.postgres.fields
import django.db.models.deletion
import functools
import stixify.web.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dossier',
            fields=[
                ('name', models.CharField(help_text='This will be used as the `name` value of the STIX Report object generated', max_length=256)),
                ('labels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), default=list, help_text='These will be added to the `labels` property of the STIX Report object generated', size=None)),
                ('identity', models.JSONField(help_text='This is a full STIX Identity JSON. e.g. `{"type":"identity","spec_version":"2.1","id":"identity--9779a2db-f98c-5f4b-8d08-8ee04e02dbb5","created":"2020-01-01T00:00:00.000Z","modified":"2020-01-01T00:00:00.000Z","name":"dogesec","description":"https://github.com/muchdogsec/","identity_class":"organization","sectors":["technology"],"contact_information":"https://www.dogesec.com/contact/","object_marking_refs":["marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487","marking-definition--97ba4e8b-04f6-57e8-8f6e-3a0f0a7dc0fb"]}`', validators=[stixify.web.models.validate_identity])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=65536)),
                ('created_by_ref', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('extractions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256, validators=[functools.partial(stixify.web.models.validate_extractor, *(['ai', 'pattern', 'lookup'],), **{})]), help_text='extraction id(s)', size=None)),
                ('whitelists', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256, validators=[functools.partial(stixify.web.models.validate_extractor, *(['whitelist'],), **{})]), default=list, help_text='whitelist id(s)', size=None)),
                ('aliases', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256, validators=[functools.partial(stixify.web.models.validate_extractor, *(['alias'],), **{})]), default=list, help_text='alias id(s)', size=None)),
                ('relationship_mode', models.CharField(choices=[('ai', 'AI Relationship'), ('standard', 'Standard Relationship')], default='standard', max_length=20)),
                ('extract_text_from_image', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('name', models.CharField(help_text='This will be used as the `name` value of the STIX Report object generated', max_length=256)),
                ('tlp_level', models.CharField(choices=[('red', 'Red'), ('amber+strict', 'Amber Strict'), ('amber', 'Amber'), ('green', 'Green'), ('clear', 'Clear')], default='red', help_text='This will be assigned to all SDOs and SROs created. Stixify uses TLPv2.')),
                ('confidence', models.IntegerField(default=0, help_text='A value between `0`-`100`. `0` means confidence unknown. `1` is the lowest confidence score, `100` is the highest confidence score.')),
                ('labels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), default=list, help_text='These will be added to the `labels` property of the STIX Report object generated', size=None)),
                ('identity', models.JSONField(help_text='This is a full STIX Identity JSON. e.g. `{"type":"identity","spec_version":"2.1","id":"identity--9779a2db-f98c-5f4b-8d08-8ee04e02dbb5","created":"2020-01-01T00:00:00.000Z","modified":"2020-01-01T00:00:00.000Z","name":"dogesec","description":"https://github.com/muchdogsec/","identity_class":"organization","sectors":["technology"],"contact_information":"https://www.dogesec.com/contact/","object_marking_refs":["marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487","marking-definition--97ba4e8b-04f6-57e8-8f6e-3a0f0a7dc0fb"]}`', validators=[stixify.web.models.validate_identity])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('report_id', models.CharField(max_length=64, null=True, unique=True)),
                ('file', models.FileField(help_text='Full path to the file to be converted. Must match a supported file type: `application/pdf`, `application/msword`, `application/vnd.openxmlformats-officedocument.wordprocessingml.document`, `application/vnd.ms-powerpoint`, `application/vnd.openxmlformats-officedocument.presentationml.presentation`, `text/html`, `text/csv`, `image/jpg`, `image/jpeg`, `image/png`, `image/webp`. The filetype must be supported by the `mode` used or you will receive an error.', upload_to=stixify.web.models.upload_to_func)),
                ('mimetype', models.CharField(max_length=64)),
                ('mode', models.CharField(help_text='How the File should be processed. Generally the `mode` should match the filetype of `file` selected. Except for HTML documents where you can use `html` mode (processes entirety of HTML page) and `html_article` mode (where only the article on the page will be processed).', max_length=256)),
                ('defang', models.BooleanField(default=True)),
                ('markdown_file', models.FileField(null=True, upload_to=stixify.web.models.upload_to_func)),
                ('dossiers', models.ManyToManyField(help_text='The Dossier ID(s) you want to add the generated Report for this File to.', related_name='files', to='web.dossier')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='web.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('error', models.CharField(max_length=65536, null=True)),
                ('run_datetime', models.DateTimeField(auto_now_add=True)),
                ('completion_time', models.DateTimeField(default=None, null=True)),
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='web.file')),
            ],
        ),
    ]
